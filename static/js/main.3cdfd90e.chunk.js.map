{"version":3,"sources":["components/Wrapper.js","components/Header.js","components/Content.js","components/DateTime.js","Context.js","components/FilterRating.js","components/Error.js","components/AddRest.js","components/Map.js","components/MapContent.js","components/IndividualReview.js","components/RestaurantCard.js","components/SideBar.js","components/Main.js","App.js","index.js"],"names":["Wrapper","props","className","children","Header","Content","DateTime","date","Date","toLocaleDateString","toLocaleTimeString","Context","createContext","FilterRating","useContext","minRating","resetMinRating","rating","starRatedColor","starEmptyColor","changeRating","newRating","numberOfStars","name","starDimension","Error","error","AddRest","restaurants","setAddRestFlag","setRestaurants","tempCoords","useState","restName","setRestName","restRating","setRestRating","restDetails","useEffect","console","log","onSubmit","e","preventDefault","geometry","location","lat","lng","place_id","icon","handleSubmit","type","value","onChange","target","placeholder","Rating","event","newValue","parseInt","Map","setTempCoords","addRestFlag","selected","setSelected","data","onMapClick","React","useCallback","latLng","defaultZoom","defaultCenter","lon","onClick","map","restu","key","position","WrappedMap","withScriptjs","withGoogleMap","MapContent","googleMapURL","loadingElement","style","height","containerElement","mapElement","IndividualReview","photo","text","src","alt","RestaurantCard","imageSource","placeid","reviewResponse","setReviewResponse","reviewName","setReviewName","reviewText","setReviewText","reviewRating","setReviewRating","restImage","setRestImage","reviewDetails","reviewFetch","a","url","axios","get","catch","request","response","status","result","photos","photo_reference","reviews","trigger","modal","close","width","author_name","profile_photo_url","handleReviewSubmit","SideBar","shortid","generate","Main","setLocation","setError","setMinRating","addReviewFlag","setAddReviewFlag","searchApi","lati","lonn","restaurantsData","results","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","Provider","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3cdfd90e.chunk.js","sourcesContent":["// Component is responsible for containing every component\n// making sure the components are centered vertically and horizontally\n\nimport React from \"react\";\n\nconst Wrapper = (props) => {\n  return <div className=\"wrapper\">{props.children}</div>;\n};\n\nexport default Wrapper;\n","import React from \"react\";\n\nconst Header = () => (\n  <div className=\"header\">\n    <h1 className=\"header__title\">Restaurant Finder</h1>\n  </div>\n);\n\nexport default Header;\n","// Component will wrap everything below the header\n\nimport React from \"react\";\n\nconst Content = (props) => {\n  return <div className=\"content\">{props.children}</div>;\n};\n\nexport default Content;\n","import React from \"react\";\n\nconst DateTime = () => {\n  const date = new Date();\n\n  return (\n    <div className=\"date-time\">\n      {`${date.toLocaleDateString()} - ${date.toLocaleTimeString()}`}\n    </div>\n  );\n};\n\nexport default DateTime;\n","import { createContext } from \"react\";\n\nconst Context = createContext();\n\nexport default Context;\n","import React, { useContext } from \"react\";\nimport StarRatings from \"react-star-ratings\";\nimport Context from \"../Context\";\n\nconst FilterRating = () => {\n  const { minRating, resetMinRating } = useContext(Context);\n  const changeRating = (newRating) => {\n    resetMinRating(newRating);\n  };\n\n  return (\n    <div className=\"filter-rating\">\n      <span className=\"rating-text\">Min Rating:</span>\n      <StarRatings\n        rating={minRating}\n        starRatedColor=\"rgb(220,20,60)\"\n        starEmptyColor=\"rgb(203, 211, 227)\"\n        changeRating={changeRating}\n        numberOfStars={5}\n        name=\"rating\"\n        starDimension=\"30px\"\n      />\n    </div>\n  );\n};\n\nexport default FilterRating;\n","import React, { useContext } from \"react\";\nimport Context from \"../Context\";\n\nconst Error = () => {\n  const { error } = useContext(Context);\n  return <div className=\"error\">{error}</div>;\n};\n\nexport default Error;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport Context from \"../Context\";\nimport Rating from '@material-ui/lab/Rating';\nimport '../styles/style.css'\n\n\nconst AddRest = () => {\n    const { restaurants, setAddRestFlag, setRestaurants, tempCoords } = useContext(Context);\n    const [restName, setRestName] = useState('')\n    const [restRating, setRestRating] = useState(0)\n    let restDetails = []\n    useEffect(() => {\n        console.log(\"AddRest\")\n        setAddRestFlag(true)\n    }, [])\n    const handleSubmit = (e, restName, restRating) => {\n        e.preventDefault()\n        restDetails = {\n            name: restName,\n            geometry: {\n                location: {\n                    lat: tempCoords.geometry.location.lat,\n                    lng: tempCoords.geometry.location.lng,\n                },\n            },\n            place_id: null,\n            rating: restRating,\n            icon: \"https://maps.gstatic.com/mapfiles/place_api/icons/lodging-71.png\"\n\n        }\n        setRestaurants([...restaurants, restDetails])\n        setAddRestFlag(false)\n    }\n\n    return (\n\n        <div className=\"addrest\">\n            <h1>Add Restaurant </h1>\n            <form onSubmit={(e) => handleSubmit(e, restName, restRating)}>\n                <input type=\"text\" value={restName} onChange={(e) => setRestName(e.target.value)} placeholder=\"name\" />\n                <Rating\n                    name=\"simple-controlled\"\n                    value={restRating}\n                    onChange={(event, newValue) => {\n                        if (newValue != null) {\n                            setRestRating(parseInt(newValue));\n                        }\n                    }}\n                />\n                <button>submit</button>\n            </form>\n        </div>\n    )\n}\n\nexport default AddRest","import React, { useContext, useState } from \"react\";\nimport { GoogleMap, Marker, InfoWindow } from \"react-google-maps\";\nimport Context from \"../Context\";\n\nconst Map = () => {\n  const { location, restaurants, setAddRestFlag, minRating, setTempCoords, addRestFlag } = useContext(Context);\n  const [markerView, setMarkerView] = useState()\n  const [selected, setSelected] = useState(null)\n  let data = []\n  const onMapClick = React.useCallback((event) => {\n    setAddRestFlag(!addRestFlag)\n    data = {\n      \"geometry\": {\n        \"location\": {\n          \"lat\": event.latLng.lat(),\n          \"lng\": event.latLng.lng(),\n        }\n      }\n    }\n    setTempCoords(data)\n  })\n  const onMarkerClick = (evt) => {\n    console.log(\"marker Clicked\", evt);\n    setMarkerView(!markerView)\n  };\n\n  return (\n    <GoogleMap\n      defaultZoom={14}\n      defaultCenter={{\n        lat: location.lat, lng: location.lon\n      }}\n      onClick={onMapClick}\n    >\n      {\n        restaurants.map((restu) => {\n          if (restu.rating < minRating || !restu.rating) {\n            return null;\n          } else {\n            return (\n              <div>\n                <Marker\n                  key={restu.name}\n                  position={{\n                    lat: restu.geometry.location.lat,\n                    lng: restu.geometry.location.lng,\n                  }}\n                  onClick={() => {\n                    setSelected(restu)\n                  }\n                  }\n                />\n                {selected ? (\n                  <InfoWindow position={{\n                    lat: selected.geometry.location.lat,\n                    lng: selected.geometry.location.lng,\n                  }}\n                  >\n                    <span>{selected.name} has {selected.rating} star rating.</span>\n                  </InfoWindow>) : null}\n              </div>\n            );\n          }\n        })\n      }\n    </GoogleMap >\n  );\n};\n\nexport default Map;\n","import React from \"react\";\nimport { withScriptjs, withGoogleMap } from \"react-google-maps\";\nimport Map from \"./Map\";\n\nconst WrappedMap = withScriptjs(withGoogleMap(Map));\n\nconst MapContent = () => {\n\n  return (\n    <div className=\"map\">\n      <WrappedMap\n        googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=AIzaSyAlELmqkRobpn26ReMLLTirp7GHsaW8vy0`}\n        loadingElement={<div style={{ height: `100%` }} />}\n        containerElement={<div style={{ height: `80vh` }} />}\n        mapElement={<div style={{ height: `80%` }} />}\n      />\n    </div>\n  );\n};\n\nexport default MapContent;","import React from 'react'\nimport StarRatings from \"react-star-ratings\";\n\n\nconst IndividualReview = ({ photo, name, rating, text }) => {\n    return (\n        <div className=\"popupClass card\">\n\n            <div>\n                <img\n                    src={photo}\n                    alt=\"Reviewer\"\n                    style={{ height: \"100px\" }}\n                />\n            </div>\n            <div className=\"ReviewNameRating\">\n                <div><h1>{name}</h1></div>\n                <div><h3>{text}</h3></div>\n                <div> <StarRatings\n                    rating={rating}\n                    starRatedColor=\"rgb(220,20,60)\"\n                    starDimension=\"30px\"\n                />                </div>\n\n            </div>\n        </div>\n    )\n}\n\nexport default IndividualReview\n\n\n","import React, { useEffect, useState } from \"react\";\nimport StarRatings from \"react-star-ratings\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport Popup from \"reactjs-popup\";\nimport axios from \"axios\";\nimport IndividualReview from \"./IndividualReview\";\n\nconst RestaurantCard = ({ name, imageSource, rating, placeid }) => {\n  const [reviewResponse, setReviewResponse] = useState([]);\n  const [reviewName, setReviewName] = useState(\"\");\n  const [reviewText, setReviewText] = useState(\"\");\n  const [reviewRating, setReviewRating] = useState(0);\n  const [restImage, setRestImage] = useState(\"\");\n  let reviewDetails = [];\n\n  const reviewFetch = async () => {\n    if (placeid != null) {\n      const url = `https://maps.googleapis.com/maps/api/place/details/json?place_id=${placeid}&key=AIzaSyAlELmqkRobpn26ReMLLTirp7GHsaW8vy0`;\n      const request = await axios.get(url).catch((error) => {\n        console.log(\"erre\", error);\n      });\n\n      const response = request;\n\n      if (response && response.status !== 200) {\n      }\n      if (response) {\n        if (response.data.result.photos != null) {\n          setRestImage(response.data.result.photos[0].photo_reference);\n          setReviewResponse(response.data.result.reviews);\n        }\n      }\n    } else {\n      setReviewResponse([]);\n    }\n  };\n  useEffect(() => {\n    reviewFetch();\n  }, []);\n\n  const handleReviewSubmit = (\n    e,\n    reviewName,\n    setReviewName,\n    reviewRating,\n    setReviewRating,\n    reviewText\n  ) => {\n    e.preventDefault();\n    if (reviewName !== \"\" && reviewText !== \"\" && reviewRating !== 0) {\n      reviewDetails = {\n        author_name: reviewName,\n        rating: parseInt(reviewRating),\n        text: reviewText,\n        profile_photo_url:\n          \"https://maps.gstatic.com/mapfiles/place_api/icons/lodging-71.png\",\n      };\n      setReviewName(\"\");\n      setReviewText(\"\");\n      setReviewRating(\"\");\n      setReviewResponse([...reviewResponse, reviewDetails]);\n    }\n  };\n  return (\n    <div className=\"card\">\n      <img\n        src={`https://maps.googleapis.com/maps/api/place/photo?photoreference=${restImage}&sensor=false&maxheight=500&maxwidth=500&key=AIzaSyAlELmqkRobpn26ReMLLTirp7GHsaW8vy0`}\n        alt=\"restaurant \"\n        className=\"restaurant-image\"\n      />\n      <div className=\"container\">\n        <h4 className=\"restaurant-title\">{name}</h4>\n        <StarRatings\n          rating={rating}\n          starRatedColor=\"rgb(220,20,60)\"\n          starDimension=\"30px\"\n        />\n        <h2>\n          <Popup\n            trigger={\n              <button className=\"button\" onClick={reviewFetch}>\n                {\" \"}\n                review{\" \"}\n              </button>\n            }\n            modal\n          >\n            {(close) => (\n              <div className=\"reviewarea\">\n                <a className=\"close\" onClick={close}>\n                  &times;\n                </a>\n                <div className=\"header\">\n                  {\" \"}\n                  {name}\n                  <Popup\n                    trigger={<button className=\"button\"> Add Review </button>}\n                  >\n                    <form\n                      style={{ width: \"auto\" }}\n                      onSubmit={(e) =>\n                        handleReviewSubmit(\n                          e,\n                          reviewName,\n                          setReviewName,\n                          reviewRating,\n                          setReviewRating,\n                          reviewText\n                        )\n                      }\n                    >\n                      Name:\n                      <input\n                        type=\"text\"\n                        value={reviewName}\n                        onChange={(e) => setReviewName(e.target.value)}\n                      />\n                      <br />\n                      Comment:\n                      <input\n                        type=\"text\"\n                        value={reviewText}\n                        onChange={(e) => setReviewText(e.target.value)}\n                      />\n                      <br />\n                      Rating:\n                      <Rating\n                        name=\"simple-controlled\"\n                        value={reviewRating}\n                        onChange={(event, newValue) => {\n                          if (newValue != null) {\n                            setReviewRating(parseInt(newValue));\n                          }\n                        }}\n                      />\n                      <br />\n                      <button>submit</button>\n                    </form>\n                  </Popup>\n                </div>\n                <div>\n                  {reviewResponse.map((restu) => {\n                    return (\n                      <div>\n                        <IndividualReview\n                          photo={restu.profile_photo_url}\n                          name={restu.author_name}\n                          rating={restu.rating}\n                          text={restu.text}\n                        />\n                      </div>\n                    );\n                  })}\n                </div>\n              </div>\n            )}\n          </Popup>\n        </h2>\n      </div>\n    </div>\n  );\n};\n\nexport default RestaurantCard;","import React, { useContext } from \"react\";\nimport Context from \"../Context\";\nimport RestaurantCard from \"./RestaurantCard\";\nimport shortid from \"shortid\";\n\n\nconst SideBar = () => {\n  const { restaurants, minRating } = useContext(Context);\n  return (\n    <div className=\"sidebar\">\n      {restaurants.map((restu) => {\n        if (restu.rating < minRating || !restu.rating) {\n          return null;\n        } else {\n          return (\n            <RestaurantCard\n              key={shortid.generate()}\n              name={restu.name}\n              imageSource={restu.photos}\n              rating={restu.rating}\n              placeid={restu.place_id}\n            />\n          );\n        }\n      })}\n    </div>\n  );\n};\n\nexport default SideBar;\n","import React, { useEffect, useState } from \"react\";\nimport Header from \"./Header\";\nimport Content from \"./Content\";\nimport DateTime from \"./DateTime\";\nimport FilterRating from \"./FilterRating\";\nimport Error from \"./Error\";\nimport axios from \"axios\";\nimport AddRest from \"./AddRest\"\nimport MapContent from \"./MapContent\";\nimport SideBar from \"./SideBar\";\nimport * as restaurantsData from \"./../data/restaurants.json\";\nimport Context from \"../Context\";\n\nconst Main = () => {\n  const [restaurants, setRestaurants] = useState([]);\n  const [location, setLocation] = useState();\n  const [error, setError] = useState();\n  const [minRating, setMinRating] = useState(1);\n  const [addRestFlag, setAddRestFlag] = useState()\n  const [tempCoords, setTempCoords] = useState([])\n  const [addReviewFlag, setAddReviewFlag] = useState(false)\n\n  const resetMinRating = (newValue) => {\n    setMinRating(newValue);\n  };\n\n  const searchApi = async (lati, lonn) => {\n    const url = `https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=${lati},${lonn}&radius=1500&type=restaurant&key=AIzaSyAlELmqkRobpn26ReMLLTirp7GHsaW8vy0`\n\n    const request = await axios.get(url).catch((error) => {\n      console.log(\"erre\", error)\n    });\n    const response = request;\n    if (response && response.status !== 200) {\n      setError(\"Error fetching information\");\n    }\n    if (response) {\n      console.log(\"sss\", restaurantsData.default)\n      setRestaurants(...restaurants, response.data.results);\n    }\n  };\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition((position) => {\n      setLocation({\n        lat: position.coords.latitude,\n        lon: position.coords.longitude,\n      });\n      searchApi(position.coords.latitude, position.coords.longitude)\n    });\n    setRestaurants(restaurantsData.default);\n    if (location) { searchApi(); }\n  }, []);\n\n  return (\n    <div className=\"main\">\n      <Header />\n      <Content>\n        <DateTime />\n        <Context.Provider\n          value={{\n            error: error,\n            location: location,\n            restaurants: restaurants,\n            resetMinRating: resetMinRating,\n            minRating: minRating,\n            setRestaurants: setRestaurants,\n            addRestFlag: addRestFlag,\n            setAddRestFlag: setAddRestFlag,\n            addReviewFlag: addReviewFlag,\n            setAddReviewFlag: setAddReviewFlag,\n            tempCoords: tempCoords,\n            setTempCoords: setTempCoords\n          }}\n        >\n          {addRestFlag && <AddRest />}\n          {location && <FilterRating />}\n          {error && <Error />}\n          {location && <MapContent />}\n          {location && <SideBar />}\n        </Context.Provider>\n      </Content>\n    </div>\n  );\n};\n\nexport default Main;\n","import React from \"react\";\nimport Wrapper from \"./components/Wrapper\";\nimport Main from \"./components/Main\";\n\nconst App = () => {\n  return (\n    <Wrapper>\n      <Main />\n    </Wrapper>\n  );\n};\n\nexport default App;\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport \"./styles/styles.scss\"\nimport App from \"./App\"\n\nReactDOM.render(<App/>, document.getElementById(\"root\"))"],"sourceRoot":""}